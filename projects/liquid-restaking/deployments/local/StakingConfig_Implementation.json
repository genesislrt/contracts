{
  "address": "0x771133AAd47debB94162867B2473B4e35DF23245",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevValue",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "CertTokenAddressChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevValue",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "EigenManagerAddressChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevValue",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "GovernanceAddressChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "MinStakeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "MinUnstakeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevValue",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "OperatorAddressChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevValue",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "RatioFeedAddressChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevValue",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "StakingPoolAddressChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevValue",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "TreasuryAddressChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getCertTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEigenPodManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGovernanceAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinUnstake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOperatorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRatioFeedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTreasuryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimumUnstake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minimumStake",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "operatorAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "governanceAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "treasuryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stakingPoolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "certTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ratioFeed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "eigenPodManager",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "setCertTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "setGovernanceAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setMinStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setMinUnstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "setOperatorAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "setRatioFeedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "setStakingPoolAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "setTreasuryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4ed8cd71780cdd2cd204f088b511a0639513f60b8f2f770aeb6f643e9b96882c",
  "receipt": {
    "to": null,
    "from": "0x683bEFfB378f6D03D288843c81E8dF4f39742aE5",
    "contractAddress": "0x771133AAd47debB94162867B2473B4e35DF23245",
    "transactionIndex": 0,
    "gasUsed": "900318",
    "logsBloom": "0x
    "blockHash": "0x22444e9b7865e6bd8ee24d418f741882386702102d5756410e44dcefcae2d5d8",
    "transactionHash": "0x4ed8cd71780cdd2cd204f088b511a0639513f60b8f2f770aeb6f643e9b96882c",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "900318",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "ec61b6f542ebd960061b47e5cd60ea4f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"CertTokenAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"EigenManagerAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"GovernanceAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MinStakeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MinUnstakeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"OperatorAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"RatioFeedAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"StakingPoolAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"TreasuryAddressChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getCertTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEigenPodManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernanceAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinUnstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOperatorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRatioFeedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumUnstake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governanceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasuryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"certTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ratioFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"eigenPodManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"setCertTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"setGovernanceAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setMinStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setMinUnstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"setOperatorAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"setRatioFeedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"setStakingPoolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"setTreasuryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_minimumUnstake\":{\"details\":\"compact size, should be multiplied by 1 gwei\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingConfig.sol\":\"StakingConfig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"contracts/StakingConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\nimport \\\"./interfaces/IStakingConfig.sol\\\";\\n\\ncontract StakingConfig is Initializable, IStakingConfig {\\n    /**\\n    * @dev compact size, should be multiplied by 1 gwei\\n    */\\n    uint64 internal _minimumUnstake;\\n    uint64 internal _minimumStake;\\n\\n    address internal _operatorAddress;\\n    address internal _governanceAddress;\\n    address internal _treasuryAddress;\\n    address internal _ratioFeedAddress;\\n    address internal _stakingPoolAddress;\\n    address internal _eigenPodManagerAddress;\\n    address internal _certTokenAddress;\\n\\n    modifier onlyGovernance() virtual {\\n        require(msg.sender == address(_governanceAddress), \\\"StakingConfig: only governance\\\");\\n        _;\\n    }\\n\\n    function initialize(\\n        uint256 minimumUnstake,\\n        uint256 minimumStake,\\n        address operatorAddress,\\n        address governanceAddress,\\n        address treasuryAddress,\\n        address stakingPoolAddress,\\n        address certTokenAddress,\\n        address ratioFeed,\\n        address eigenPodManager\\n    ) external initializer {\\n        _setMinStake(minimumStake);\\n        _setMinUnstake(minimumUnstake);\\n        _operatorAddress = operatorAddress;\\n        emit OperatorAddressChanged(address(0x00), operatorAddress);\\n        _certTokenAddress = certTokenAddress;\\n        emit CertTokenAddressChanged(address(0x00), certTokenAddress);\\n        _governanceAddress = governanceAddress;\\n        emit GovernanceAddressChanged(address(0x00), governanceAddress);\\n        _treasuryAddress = treasuryAddress;\\n        emit TreasuryAddressChanged(address(0x00), treasuryAddress);\\n        _stakingPoolAddress = stakingPoolAddress;\\n        emit StakingPoolAddressChanged(address(0x00), stakingPoolAddress);\\n        _eigenPodManagerAddress = eigenPodManager;\\n        emit EigenManagerAddressChanged(address(0x00), eigenPodManager);\\n        _ratioFeedAddress = ratioFeed;\\n        emit RatioFeedAddressChanged(address(0x00), ratioFeed);\\n    }\\n\\n    function getOperatorAddress() external view override returns (address) {\\n        return _operatorAddress;\\n    }\\n\\n    function setOperatorAddress(address newValue) external override onlyGovernance {\\n        require(newValue != address(0), \\\"StakingConfig: address can't be nil\\\");\\n        address prevValue = _operatorAddress;\\n        _operatorAddress = newValue;\\n        emit OperatorAddressChanged(prevValue, newValue);\\n    }\\n\\n    function setGovernanceAddress(address newValue) external override onlyGovernance {\\n        require(newValue != address(0), \\\"StakingConfig: address can't be nil\\\");\\n        address prevValue = _governanceAddress;\\n        _governanceAddress = newValue;\\n        emit GovernanceAddressChanged(prevValue, newValue);\\n    }\\n\\n    function setRatioFeedAddress(address newValue) external override onlyGovernance {\\n        require(newValue != address(0), \\\"StakingConfig: address can't be nil\\\");\\n        address prevValue = _ratioFeedAddress;\\n        _ratioFeedAddress = newValue;\\n        emit RatioFeedAddressChanged(prevValue, newValue);\\n    }\\n\\n    function setTreasuryAddress(address newValue) external override onlyGovernance {\\n        require(newValue != address(0), \\\"StakingConfig: address can't be nil\\\");\\n        address prevValue = _treasuryAddress;\\n        _treasuryAddress = newValue;\\n        emit TreasuryAddressChanged(prevValue, newValue);\\n    }\\n\\n    function setStakingPoolAddress(address newValue) external override onlyGovernance {\\n        require(newValue != address(0), \\\"StakingConfig: address can't be nil\\\");\\n        address prevValue = _stakingPoolAddress;\\n        _stakingPoolAddress = newValue;\\n        emit StakingPoolAddressChanged(prevValue, newValue);\\n    }\\n\\n\\n    function setCertTokenAddress(address newValue) external override onlyGovernance {\\n        require(newValue != address(0), \\\"StakingConfig: address can't be nil\\\");\\n        address prevValue = _certTokenAddress;\\n        _certTokenAddress = newValue;\\n        emit CertTokenAddressChanged(prevValue, newValue);\\n    }\\n\\n\\n    function getGovernanceAddress() external view override returns (address) {\\n        return _governanceAddress;\\n    }\\n\\n    function getStakingPoolAddress() external view override returns (address) {\\n        return _stakingPoolAddress;\\n    }\\n\\n    function getRatioFeedAddress() external view override returns (address) {\\n        return _ratioFeedAddress;\\n    }\\n\\n    function getEigenPodManagerAddress() external view override returns (address) {\\n        return _eigenPodManagerAddress;\\n    }\\n\\n    function getCertTokenAddress() external view override returns (address) {\\n        return _certTokenAddress;\\n    }\\n\\n    function getTreasuryAddress() external view override returns (address) {\\n        return _treasuryAddress;\\n    }\\n\\n    function getMinStake() public view virtual override returns (uint256) {\\n        return uint256(_minimumStake) * 1 gwei;\\n    }\\n\\n    function getMinUnstake() public view virtual override returns (uint256) {\\n        return uint256(_minimumUnstake) * 1 gwei;\\n    }\\n\\n    function setMinUnstake(\\n        uint256 newValue\\n    ) external virtual override onlyGovernance {\\n        _setMinUnstake(newValue);\\n    }\\n\\n    function _setMinUnstake(\\n        uint256 newValue\\n    ) internal {\\n        require(\\n            newValue % 1 gwei == 0,\\n            \\\"StakingConfig: value should be multiplied of gwei\\\"\\n        );\\n        uint256 prevValue = getMinUnstake();\\n        _minimumUnstake = uint64(newValue / 1 gwei);\\n        require(\\n            _minimumUnstake * 1 gwei == newValue,\\n            \\\"StakingConfig: overflow\\\"\\n        );\\n        emit MinUnstakeChanged(prevValue, newValue);\\n    }\\n\\n\\n    function setMinStake(\\n        uint256 newValue\\n    ) external virtual override onlyGovernance {\\n        _setMinStake(newValue);\\n    }\\n\\n    function _setMinStake(uint256 newValue) internal {\\n        require(\\n            newValue % 1 gwei == 0,\\n            \\\"StakingConfig: value should be multiplied of gwei\\\"\\n        );\\n        uint256 prevValue = getMinStake();\\n        _minimumStake = uint64(newValue / 1 gwei);\\n        require(\\n            _minimumStake * 1 gwei == newValue,\\n            \\\"StakingConfig: overflow\\\"\\n        );\\n        emit MinStakeChanged(prevValue, newValue);\\n    }\\n}\",\"keccak256\":\"0x5247f3094ace62df38db4e162516a8363120871507a0014b5abd65b52eae9bee\",\"license\":\"MIT\"},\"contracts/interfaces/IGovernable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface IGovernable {\\n    event GovernanceAddressChanged(address prevValue, address newValue);\\n\\n    function getGovernanceAddress() external view returns (address);\\n    function setGovernanceAddress(address newValue) external;\\n}\",\"keccak256\":\"0xe4644174b723a10cad795e8448c91bf612d59a855fc80ea532f741cc4b000d96\",\"license\":\"MIT\"},\"contracts/interfaces/IStakingConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./IGovernable.sol\\\";\\n\\ninterface IStakingConfig is IGovernable {\\n    event OperatorAddressChanged(address prevValue, address newValue);\\n    event TreasuryAddressChanged(address prevValue, address newValue);\\n    event RatioFeedAddressChanged(address prevValue, address newValue);\\n    event CertTokenAddressChanged(address prevValue, address newValue);\\n    event StakingPoolAddressChanged(address prevValue, address newValue);\\n    event EigenManagerAddressChanged(address prevValue, address newValue);\\n    event MinUnstakeChanged(uint256 prevValue, uint256 newValue);\\n    event MinStakeChanged(uint256 prevValue, uint256 newValue);\\n\\n    function getOperatorAddress() external view returns (address);\\n\\n    function getRatioFeedAddress() external view returns (address);\\n\\n    function getStakingPoolAddress() external view returns (address);\\n\\n    function getTreasuryAddress() external view returns (address);\\n\\n    function getEigenPodManagerAddress() external view returns (address);\\n\\n    function getCertTokenAddress() external view returns (address);\\n\\n    function getMinStake() external view returns (uint256);\\n\\n    function getMinUnstake() external view returns (uint256);\\n\\n    function setStakingPoolAddress(address newValue) external;\\n\\n    function setOperatorAddress(address newValue) external;\\n\\n    function setRatioFeedAddress(address newValue) external;\\n\\n    function setTreasuryAddress(address newValue) external;\\n\\n    function setCertTokenAddress(address newValue) external;\\n\\n    function setMinStake(uint256 newValue) external;\\n\\n    function setMinUnstake(uint256 newValue) external;\\n}\",\"keccak256\":\"0x4ce8a03f9908cfec0ef658d784ce1f3b88fbef1a12418ea9fe008ee69cf506fd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610f51806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638c80fd90116100a2578063bd55a84e11610071578063bd55a84e1461021d578063cfc162541461022e578063d2295eff14610241578063e002460414610254578063e87ff3441461026557600080fd5b80638c80fd90146101d55780638ce4ff16146101e85780638ed872e6146101fb578063b6217be71461020c57600080fd5b806356a3b5fa116100e957806356a3b5fa146101835780636605bfda1461018b5780636e9db26e1461019e57806373252494146101b1578063845b9150146101c257600080fd5b8063034c44541461011b578063203d81c1146101365780632ec338ba1461014b5780632f1d5a6014610170575b600080fd5b610123610276565b6040519081526020015b60405180910390f35b610149610144366004610cc4565b61029d565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200161012d565b61014961017e366004610cc4565b610355565b6101236103f8565b610149610199366004610cc4565b61041b565b6101496101ac366004610cc4565b6104be565b6002546001600160a01b0316610158565b6101496101d0366004610ce6565b610561565b6101496101e3366004610ce6565b610597565b6101496101f6366004610cff565b6105ca565b6006546001600160a01b0316610158565b6005546001600160a01b0316610158565b6007546001600160a01b0316610158565b61014961023c366004610cc4565b610948565b61014961024f366004610cc4565b6109eb565b6003546001600160a01b0316610158565b6004546001600160a01b0316610158565b600080546102989062010000900467ffffffffffffffff16633b9aca00610daf565b905090565b6002546001600160a01b031633146102d05760405162461bcd60e51b81526004016102c790610dcc565b60405180910390fd5b6001600160a01b0381166102f65760405162461bcd60e51b81526004016102c790610e03565b600580546001600160a01b038381166001600160a01b03198316179092556040519116907f9ce404b121e13a051d915e2e8ffd02c961417a8882f46fec013411e84c7f82d3906103499083908590610e46565b60405180910390a15050565b6002546001600160a01b0316331461037f5760405162461bcd60e51b81526004016102c790610dcc565b6001600160a01b0381166103a55760405162461bcd60e51b81526004016102c790610e03565b600180546001600160a01b038381166001600160a01b03198316179092556040519116907f6d83175096b0de3f5de98ab86d95234fb1a95bd44b8e97696d5b195b27bf42fd906103499083908590610e46565b6000805461029890600160501b900467ffffffffffffffff16633b9aca00610daf565b6002546001600160a01b031633146104455760405162461bcd60e51b81526004016102c790610dcc565b6001600160a01b03811661046b5760405162461bcd60e51b81526004016102c790610e03565b600380546001600160a01b038381166001600160a01b03198316179092556040519116907f4fc6e7a37aea21888550b60360992adb6a9b3b4da644d63e9f3a420c2d86e282906103499083908590610e46565b6002546001600160a01b031633146104e85760405162461bcd60e51b81526004016102c790610dcc565b6001600160a01b03811661050e5760405162461bcd60e51b81526004016102c790610e03565b600780546001600160a01b038381166001600160a01b03198316179092556040519116907f5eb18df2507d560d200b3f0500f2c8f0a1451987559d67ccd2a9f803d729447d906103499083908590610e46565b6002546001600160a01b0316331461058b5760405162461bcd60e51b81526004016102c790610dcc565b61059481610a8e565b50565b6002546001600160a01b031633146105c15760405162461bcd60e51b81526004016102c790610dcc565b61059481610b9a565b600054610100900460ff16158080156105ea5750600054600160ff909116105b806106045750303b158015610604575060005460ff166001145b6106675760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102c7565b6000805460ff19166001179055801561068a576000805461ff0019166101001790555b61069389610b9a565b61069c8a610a8e565b600180546001600160a01b0319166001600160a01b038a161790556040517f6d83175096b0de3f5de98ab86d95234fb1a95bd44b8e97696d5b195b27bf42fd906106ea906000908b90610e46565b60405180910390a1600780546001600160a01b0319166001600160a01b0386161790556040517f5eb18df2507d560d200b3f0500f2c8f0a1451987559d67ccd2a9f803d729447d90610740906000908790610e46565b60405180910390a1600280546001600160a01b0319166001600160a01b0389161790556040517f023588d3d1dcaad34e471c9e01b616b794156174bc693539c8fe15c0bfd5d82690610796906000908a90610e46565b60405180910390a1600380546001600160a01b0319166001600160a01b0388161790556040517f4fc6e7a37aea21888550b60360992adb6a9b3b4da644d63e9f3a420c2d86e282906107ec906000908990610e46565b60405180910390a1600580546001600160a01b0319166001600160a01b0387161790556040517f9ce404b121e13a051d915e2e8ffd02c961417a8882f46fec013411e84c7f82d390610842906000908890610e46565b60405180910390a1600680546001600160a01b0319166001600160a01b0384161790556040517f68d0770ff8eaea943d0b2f2020510cc23bbedaefd94add71cda3b4a4054b11c390610898906000908590610e46565b60405180910390a1600480546001600160a01b0319166001600160a01b0385161790556040517feb06cc25da8e6462dfb53cbdcffa08eacbc3833c4f299500a8944ad43e4fd3d2906108ee906000908690610e46565b60405180910390a1801561093c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050505050565b6002546001600160a01b031633146109725760405162461bcd60e51b81526004016102c790610dcc565b6001600160a01b0381166109985760405162461bcd60e51b81526004016102c790610e03565b600280546001600160a01b038381166001600160a01b03198316179092556040519116907f023588d3d1dcaad34e471c9e01b616b794156174bc693539c8fe15c0bfd5d826906103499083908590610e46565b6002546001600160a01b03163314610a155760405162461bcd60e51b81526004016102c790610dcc565b6001600160a01b038116610a3b5760405162461bcd60e51b81526004016102c790610e03565b600480546001600160a01b038381166001600160a01b03198316179092556040519116907feb06cc25da8e6462dfb53cbdcffa08eacbc3833c4f299500a8944ad43e4fd3d2906103499083908590610e46565b610a9c633b9aca0082610e76565b15610ab95760405162461bcd60e51b81526004016102c790610e8a565b6000610ac3610276565b9050610ad3633b9aca0083610edb565b6000805469ffffffffffffffff000019166201000067ffffffffffffffff938416810291909117918290558492610b13929190910416633b9aca00610eef565b67ffffffffffffffff1614610b645760405162461bcd60e51b81526020600482015260176024820152765374616b696e67436f6e6669673a206f766572666c6f7760481b60448201526064016102c7565b60408051828152602081018490527f984016d328adef81f3cc09f8ea9e3420f85d390635be94215c432e83837aa0a29101610349565b610ba8633b9aca0082610e76565b15610bc55760405162461bcd60e51b81526004016102c790610e8a565b6000610bcf6103f8565b9050610bdf633b9aca0083610edb565b6000805467ffffffffffffffff60501b1916600160501b67ffffffffffffffff938416810291909117918290558492610c21929190910416633b9aca00610eef565b67ffffffffffffffff1614610c725760405162461bcd60e51b81526020600482015260176024820152765374616b696e67436f6e6669673a206f766572666c6f7760481b60448201526064016102c7565b60408051828152602081018490527fca11c8a4c461b60c9f485404c272650c2aaae260b2067d72e9924abb685565939101610349565b80356001600160a01b0381168114610cbf57600080fd5b919050565b600060208284031215610cd657600080fd5b610cdf82610ca8565b9392505050565b600060208284031215610cf857600080fd5b5035919050565b60008060008060008060008060006101208a8c031215610d1e57600080fd5b8935985060208a01359750610d3560408b01610ca8565b9650610d4360608b01610ca8565b9550610d5160808b01610ca8565b9450610d5f60a08b01610ca8565b9350610d6d60c08b01610ca8565b9250610d7b60e08b01610ca8565b9150610d8a6101008b01610ca8565b90509295985092959850929598565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610dc657610dc6610d99565b92915050565b6020808252601e908201527f5374616b696e67436f6e6669673a206f6e6c7920676f7665726e616e63650000604082015260600190565b60208082526023908201527f5374616b696e67436f6e6669673a20616464726573732063616e2774206265206040820152621b9a5b60ea1b606082015260800190565b6001600160a01b0392831681529116602082015260400190565b634e487b7160e01b600052601260045260246000fd5b600082610e8557610e85610e60565b500690565b60208082526031908201527f5374616b696e67436f6e6669673a2076616c75652073686f756c64206265206d604082015270756c7469706c696564206f66206777656960781b606082015260800190565b600082610eea57610eea610e60565b500490565b67ffffffffffffffff818116838216028082169190828114610f1357610f13610d99565b50509291505056fea2646970667358221220e16d0528b9e418677c0637f0299de1e2dfd71732192e7bda8ceb1bd7024456c264736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80638c80fd90116100a2578063bd55a84e11610071578063bd55a84e1461021d578063cfc162541461022e578063d2295eff14610241578063e002460414610254578063e87ff3441461026557600080fd5b80638c80fd90146101d55780638ce4ff16146101e85780638ed872e6146101fb578063b6217be71461020c57600080fd5b806356a3b5fa116100e957806356a3b5fa146101835780636605bfda1461018b5780636e9db26e1461019e57806373252494146101b1578063845b9150146101c257600080fd5b8063034c44541461011b578063203d81c1146101365780632ec338ba1461014b5780632f1d5a6014610170575b600080fd5b610123610276565b6040519081526020015b60405180910390f35b610149610144366004610cc4565b61029d565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200161012d565b61014961017e366004610cc4565b610355565b6101236103f8565b610149610199366004610cc4565b61041b565b6101496101ac366004610cc4565b6104be565b6002546001600160a01b0316610158565b6101496101d0366004610ce6565b610561565b6101496101e3366004610ce6565b610597565b6101496101f6366004610cff565b6105ca565b6006546001600160a01b0316610158565b6005546001600160a01b0316610158565b6007546001600160a01b0316610158565b61014961023c366004610cc4565b610948565b61014961024f366004610cc4565b6109eb565b6003546001600160a01b0316610158565b6004546001600160a01b0316610158565b600080546102989062010000900467ffffffffffffffff16633b9aca00610daf565b905090565b6002546001600160a01b031633146102d05760405162461bcd60e51b81526004016102c790610dcc565b60405180910390fd5b6001600160a01b0381166102f65760405162461bcd60e51b81526004016102c790610e03565b600580546001600160a01b038381166001600160a01b03198316179092556040519116907f9ce404b121e13a051d915e2e8ffd02c961417a8882f46fec013411e84c7f82d3906103499083908590610e46565b60405180910390a15050565b6002546001600160a01b0316331461037f5760405162461bcd60e51b81526004016102c790610dcc565b6001600160a01b0381166103a55760405162461bcd60e51b81526004016102c790610e03565b600180546001600160a01b038381166001600160a01b03198316179092556040519116907f6d83175096b0de3f5de98ab86d95234fb1a95bd44b8e97696d5b195b27bf42fd906103499083908590610e46565b6000805461029890600160501b900467ffffffffffffffff16633b9aca00610daf565b6002546001600160a01b031633146104455760405162461bcd60e51b81526004016102c790610dcc565b6001600160a01b03811661046b5760405162461bcd60e51b81526004016102c790610e03565b600380546001600160a01b038381166001600160a01b03198316179092556040519116907f4fc6e7a37aea21888550b60360992adb6a9b3b4da644d63e9f3a420c2d86e282906103499083908590610e46565b6002546001600160a01b031633146104e85760405162461bcd60e51b81526004016102c790610dcc565b6001600160a01b03811661050e5760405162461bcd60e51b81526004016102c790610e03565b600780546001600160a01b038381166001600160a01b03198316179092556040519116907f5eb18df2507d560d200b3f0500f2c8f0a1451987559d67ccd2a9f803d729447d906103499083908590610e46565b6002546001600160a01b0316331461058b5760405162461bcd60e51b81526004016102c790610dcc565b61059481610a8e565b50565b6002546001600160a01b031633146105c15760405162461bcd60e51b81526004016102c790610dcc565b61059481610b9a565b600054610100900460ff16158080156105ea5750600054600160ff909116105b806106045750303b158015610604575060005460ff166001145b6106675760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102c7565b6000805460ff19166001179055801561068a576000805461ff0019166101001790555b61069389610b9a565b61069c8a610a8e565b600180546001600160a01b0319166001600160a01b038a161790556040517f6d83175096b0de3f5de98ab86d95234fb1a95bd44b8e97696d5b195b27bf42fd906106ea906000908b90610e46565b60405180910390a1600780546001600160a01b0319166001600160a01b0386161790556040517f5eb18df2507d560d200b3f0500f2c8f0a1451987559d67ccd2a9f803d729447d90610740906000908790610e46565b60405180910390a1600280546001600160a01b0319166001600160a01b0389161790556040517f023588d3d1dcaad34e471c9e01b616b794156174bc693539c8fe15c0bfd5d82690610796906000908a90610e46565b60405180910390a1600380546001600160a01b0319166001600160a01b0388161790556040517f4fc6e7a37aea21888550b60360992adb6a9b3b4da644d63e9f3a420c2d86e282906107ec906000908990610e46565b60405180910390a1600580546001600160a01b0319166001600160a01b0387161790556040517f9ce404b121e13a051d915e2e8ffd02c961417a8882f46fec013411e84c7f82d390610842906000908890610e46565b60405180910390a1600680546001600160a01b0319166001600160a01b0384161790556040517f68d0770ff8eaea943d0b2f2020510cc23bbedaefd94add71cda3b4a4054b11c390610898906000908590610e46565b60405180910390a1600480546001600160a01b0319166001600160a01b0385161790556040517feb06cc25da8e6462dfb53cbdcffa08eacbc3833c4f299500a8944ad43e4fd3d2906108ee906000908690610e46565b60405180910390a1801561093c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050505050565b6002546001600160a01b031633146109725760405162461bcd60e51b81526004016102c790610dcc565b6001600160a01b0381166109985760405162461bcd60e51b81526004016102c790610e03565b600280546001600160a01b038381166001600160a01b03198316179092556040519116907f023588d3d1dcaad34e471c9e01b616b794156174bc693539c8fe15c0bfd5d826906103499083908590610e46565b6002546001600160a01b03163314610a155760405162461bcd60e51b81526004016102c790610dcc565b6001600160a01b038116610a3b5760405162461bcd60e51b81526004016102c790610e03565b600480546001600160a01b038381166001600160a01b03198316179092556040519116907feb06cc25da8e6462dfb53cbdcffa08eacbc3833c4f299500a8944ad43e4fd3d2906103499083908590610e46565b610a9c633b9aca0082610e76565b15610ab95760405162461bcd60e51b81526004016102c790610e8a565b6000610ac3610276565b9050610ad3633b9aca0083610edb565b6000805469ffffffffffffffff000019166201000067ffffffffffffffff938416810291909117918290558492610b13929190910416633b9aca00610eef565b67ffffffffffffffff1614610b645760405162461bcd60e51b81526020600482015260176024820152765374616b696e67436f6e6669673a206f766572666c6f7760481b60448201526064016102c7565b60408051828152602081018490527f984016d328adef81f3cc09f8ea9e3420f85d390635be94215c432e83837aa0a29101610349565b610ba8633b9aca0082610e76565b15610bc55760405162461bcd60e51b81526004016102c790610e8a565b6000610bcf6103f8565b9050610bdf633b9aca0083610edb565b6000805467ffffffffffffffff60501b1916600160501b67ffffffffffffffff938416810291909117918290558492610c21929190910416633b9aca00610eef565b67ffffffffffffffff1614610c725760405162461bcd60e51b81526020600482015260176024820152765374616b696e67436f6e6669673a206f766572666c6f7760481b60448201526064016102c7565b60408051828152602081018490527fca11c8a4c461b60c9f485404c272650c2aaae260b2067d72e9924abb685565939101610349565b80356001600160a01b0381168114610cbf57600080fd5b919050565b600060208284031215610cd657600080fd5b610cdf82610ca8565b9392505050565b600060208284031215610cf857600080fd5b5035919050565b60008060008060008060008060006101208a8c031215610d1e57600080fd5b8935985060208a01359750610d3560408b01610ca8565b9650610d4360608b01610ca8565b9550610d5160808b01610ca8565b9450610d5f60a08b01610ca8565b9350610d6d60c08b01610ca8565b9250610d7b60e08b01610ca8565b9150610d8a6101008b01610ca8565b90509295985092959850929598565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610dc657610dc6610d99565b92915050565b6020808252601e908201527f5374616b696e67436f6e6669673a206f6e6c7920676f7665726e616e63650000604082015260600190565b60208082526023908201527f5374616b696e67436f6e6669673a20616464726573732063616e2774206265206040820152621b9a5b60ea1b606082015260800190565b6001600160a01b0392831681529116602082015260400190565b634e487b7160e01b600052601260045260246000fd5b600082610e8557610e85610e60565b500690565b60208082526031908201527f5374616b696e67436f6e6669673a2076616c75652073686f756c64206265206d604082015270756c7469706c696564206f66206777656960781b606082015260800190565b600082610eea57610eea610e60565b500490565b67ffffffffffffffff818116838216028082169190828114610f1357610f13610d99565b50509291505056fea2646970667358221220e16d0528b9e418677c0637f0299de1e2dfd71732192e7bda8ceb1bd7024456c264736f6c63430008130033",
  "devdoc": {
    "events": {
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "_minimumUnstake": {
        "details": "compact size, should be multiplied by 1 gwei"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 138,
        "contract": "contracts/StakingConfig.sol:StakingConfig",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 141,
        "contract": "contracts/StakingConfig.sol:StakingConfig",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3061,
        "contract": "contracts/StakingConfig.sol:StakingConfig",
        "label": "_minimumUnstake",
        "offset": 2,
        "slot": "0",
        "type": "t_uint64"
      },
      {
        "astId": 3063,
        "contract": "contracts/StakingConfig.sol:StakingConfig",
        "label": "_minimumStake",
        "offset": 10,
        "slot": "0",
        "type": "t_uint64"
      },
      {
        "astId": 3065,
        "contract": "contracts/StakingConfig.sol:StakingConfig",
        "label": "_operatorAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3067,
        "contract": "contracts/StakingConfig.sol:StakingConfig",
        "label": "_governanceAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 3069,
        "contract": "contracts/StakingConfig.sol:StakingConfig",
        "label": "_treasuryAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 3071,
        "contract": "contracts/StakingConfig.sol:StakingConfig",
        "label": "_ratioFeedAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 3073,
        "contract": "contracts/StakingConfig.sol:StakingConfig",
        "label": "_stakingPoolAddress",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 3075,
        "contract": "contracts/StakingConfig.sol:StakingConfig",
        "label": "_eigenPodManagerAddress",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 3077,
        "contract": "contracts/StakingConfig.sol:StakingConfig",
        "label": "_certTokenAddress",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}